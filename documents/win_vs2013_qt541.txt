1.vs2013安装的是VS2013_RTM_ULT_ENU,然后安装update2补丁vs2013.2.
如果是win7系统,需要安装service pack 1，即windows6.1-KB976932.
Vs2013安装完后,如果没有发现以下键值,就需要安装windows sdk 8.1.
[HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Microsoft SDKs\Windows\v8.1]
"InstallationFolder"="C:\\Program Files (x86)\\Windows Kits\\8.1\\"
"ProductName"="Microsoft Windows SDK for Windows 8.1"
"ProductVersion"="6.3..9600"
Vs2013在help/产品注册里输入序列号.

2.python安装的是python-3.5.0-amd64,更改python的安装位置为C:\Python\Python35,不要选中增加PATH环境变量的选项,
在安装完成后需要增加C:\Python\Python35\目录到PATH中.

3.qt安装的是qt-everywhere-opensource-src-5.4.1,需要先安装python,解压后得到目录qt-everywhere-opensource-src-5.4.1,
然后打开“VS2013 x64 Native Tools Command Prompt”窗口,
进入到该目录执行configure -prefix C:\Qt命令,然后执行nmake编译,
最后nmake install安装到C:Qt\目录.

4.boost安装的是boost_1_59_0,解压后得目录boost_1_59_0,然后打开“VS2013 x64 Native Tools Command Prompt”窗口,
进入到该目录执行bootstrap命令,
然后b2 --build-type=complete threading=multi link=shared address-model=64 -a进行编译,编译结果在stage/lib目录,
最后b2 --build-type=complete threading=multi link=shared address-model=64 install可以发布头文件和库到目录C:\Boost,
注意需要增加C:\Boost\lib目录到PATH中.

5.protobuf安装的是protobuf-2.5.0,解压后得目录protobuf-2.5.0,然后打开vsprojects目录中的protobuf.sln,编译
如果碰到编译错误提示min max找不到,增加头文件#include <algorithm>,继续编译成功.
在C盘目录下建立目录protobuf.
在vsprojects目录下执行extract_includes.bat得到include文件夹,把该文件夹移动到C:\protobuf目录下.
在C:\protobuf目录下增加bin目录.
把vsprojects\Debug\protoc.exe和libprotobuf.lib文件拷贝到C:\protobuf\bin目录下.

6.系统变量增加
PATH环境变量C:\Python\Python35\;C:\Boost\lib\;C:\Qt\bin\;C:\protobuf\bin
BOOSTINCLUDE=C:\Boost\include\boost-1_59\
QTINCLUDE=C:\Qt\include\
PROTOBUF_ROOT=C:\protobuf\
ABCPLAT_ROOT=D:\workplat\abcplat\

7.需要安装一下windows sdk 8.1，否则QtCreator找不到调试器。

8.vs2013编译utf-8无BOM的源文件时，碰到汉字会报warning C4819，而且对某些汉字还会编译不过。
这些汉字不管是字符串还是注释行中，都会碰到这种问题。 
解决办法是使用vs2015，即使使用u8字符串字面量也不能，因为vs2013不支持u8。

